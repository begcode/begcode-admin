package com.begcode.monolith.taskjob.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TaskJobConfigAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskJobConfigAllPropertiesEquals(TaskJobConfig expected, TaskJobConfig actual) {
        assertTaskJobConfigAutoGeneratedPropertiesEquals(expected, actual);
        assertTaskJobConfigAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskJobConfigAllUpdatablePropertiesEquals(TaskJobConfig expected, TaskJobConfig actual) {
        assertTaskJobConfigUpdatableFieldsEquals(expected, actual);
        assertTaskJobConfigUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskJobConfigAutoGeneratedPropertiesEquals(TaskJobConfig expected, TaskJobConfig actual) {
        assertThat(expected)
            .as("Verify TaskJobConfig auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskJobConfigUpdatableFieldsEquals(TaskJobConfig expected, TaskJobConfig actual) {
        assertThat(expected)
            .as("Verify TaskJobConfig relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getJobClassName()).as("check jobClassName").isEqualTo(actual.getJobClassName()))
            .satisfies(e -> assertThat(e.getCronExpression()).as("check cronExpression").isEqualTo(actual.getCronExpression()))
            .satisfies(e -> assertThat(e.getParameter()).as("check parameter").isEqualTo(actual.getParameter()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getJobStatus()).as("check jobStatus").isEqualTo(actual.getJobStatus()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()))
            .satisfies(e -> assertThat(e.getLastModifiedBy()).as("check lastModifiedBy").isEqualTo(actual.getLastModifiedBy()))
            .satisfies(e -> assertThat(e.getLastModifiedDate()).as("check lastModifiedDate").isEqualTo(actual.getLastModifiedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTaskJobConfigUpdatableRelationshipsEquals(TaskJobConfig expected, TaskJobConfig actual) {}
}
