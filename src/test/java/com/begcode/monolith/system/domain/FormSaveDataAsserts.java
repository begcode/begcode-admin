package com.begcode.monolith.system.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FormSaveDataAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormSaveDataAllPropertiesEquals(FormSaveData expected, FormSaveData actual) {
        assertFormSaveDataAutoGeneratedPropertiesEquals(expected, actual);
        assertFormSaveDataAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormSaveDataAllUpdatablePropertiesEquals(FormSaveData expected, FormSaveData actual) {
        assertFormSaveDataUpdatableFieldsEquals(expected, actual);
        assertFormSaveDataUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormSaveDataAutoGeneratedPropertiesEquals(FormSaveData expected, FormSaveData actual) {
        assertThat(expected)
            .as("Verify FormSaveData auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormSaveDataUpdatableFieldsEquals(FormSaveData expected, FormSaveData actual) {
        assertThat(expected)
            .as("Verify FormSaveData relevant properties")
            .satisfies(e -> assertThat(e.getFormData()).as("check formData").isEqualTo(actual.getFormData()))
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()))
            .satisfies(e -> assertThat(e.getLastModifiedBy()).as("check lastModifiedBy").isEqualTo(actual.getLastModifiedBy()))
            .satisfies(e -> assertThat(e.getLastModifiedDate()).as("check lastModifiedDate").isEqualTo(actual.getLastModifiedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFormSaveDataUpdatableRelationshipsEquals(FormSaveData expected, FormSaveData actual) {
        assertThat(expected)
            .as("Verify FormSaveData relationships")
            .satisfies(e -> assertThat(e.getFormConfig()).as("check formConfig").isEqualTo(actual.getFormConfig()));
    }
}
